{"ast":null,"code":"var _jsxFileName = \"/Users/alvinkim/dev/react/map-api-practice/src/components/Map/Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport { GoogleMap, Marker, MarkerClusterer } from \"@react-google-maps/api\";\nimport \"./Map.css\";\nimport icon from \"../../assets/marker-icon.png\";\nimport Places from \"../Place/Places\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const [userLocation, setUserLocation] = useState();\n  const mapRef = useRef();\n  const center = useMemo(() => ({\n    lat: 49.240906,\n    lng: -123.1695677\n  }), []);\n  const options = useMemo(() => ({\n    mapId: \"d38ddb8950d85ff7\",\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(map => mapRef.current = map, []);\n  const userLocations = useMemo(() => generateLocations(center), [center]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter the location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Places, {\n        setUserLocation: position => {\n          var _mapRef$current;\n          setUserLocation(position);\n          (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(position);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        zoom: 12,\n        center: center,\n        mapContainerClassName: \"map-container\",\n        options: options,\n        onLoad: onLoad,\n        children: userLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: userLocation,\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), userLocations.map(userLocation => /*#__PURE__*/_jsxDEV(Marker, {\n            position: userLocation\n          }, userLocation.lat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"iB+c9yJ1GX4WgKAbr63upoEPHu8=\");\n_c = Map;\nconst defaultOptions = {\n  strokeOpacity: 0.5,\n  strokeWeight: 2,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  visible: true\n};\nconst closeOptions = {\n  ...defaultOptions,\n  zIndex: 3,\n  fillOpacity: 0.05,\n  strokeColor: \"#8BC34A\",\n  fillColor: \"#8BC34A\"\n};\nconst generateLocations = position => {\n  const userLocations = [];\n  for (let i = 0; i < 100; i++) {\n    const direction = Math.random() < 0.5 ? -10 : 10;\n    userLocations.push({\n      lat: position.lat + Math.random() / direction,\n      lng: position.lng + Math.random() / direction\n    });\n  }\n  return userLocations;\n};\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useMemo","useRef","useState","GoogleMap","Marker","MarkerClusterer","icon","Places","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","_s","userLocation","setUserLocation","mapRef","center","lat","lng","options","mapId","disableDefaultUI","clickableIcons","onLoad","map","current","userLocations","generateLocations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","position","_mapRef$current","panTo","zoom","mapContainerClassName","_c","defaultOptions","strokeOpacity","strokeWeight","clickable","draggable","editable","visible","closeOptions","zIndex","fillOpacity","strokeColor","fillColor","i","direction","Math","random","push","$RefreshReg$"],"sources":["/Users/alvinkim/dev/react/map-api-practice/src/components/Map/Map.jsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport { GoogleMap, Marker, MarkerClusterer } from \"@react-google-maps/api\";\nimport \"./Map.css\";\nimport icon from \"../../assets/marker-icon.png\";\nimport Places from \"../Place/Places\";\n\nfunction Map() {\n  const [userLocation, setUserLocation] = useState();\n  const mapRef = useRef();\n  const center = useMemo(() => ({ lat: 49.240906, lng: -123.1695677 }), []);\n  const options = useMemo(\n    () => ({\n      mapId: \"d38ddb8950d85ff7\",\n      disableDefaultUI: true,\n      clickableIcons: false,\n    }),\n    []\n  );\n\n  const onLoad = useCallback((map) => (mapRef.current = map), []);\n  const userLocations = useMemo(() => generateLocations(center), [center]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"controls\">\n        <h1>Enter the location</h1>\n        <Places\n          setUserLocation={(position) => {\n            setUserLocation(position);\n            mapRef.current?.panTo(position);\n          }}\n        />\n      </div>\n\n      <div className=\"map\">\n        <GoogleMap\n          zoom={12}\n          center={center}\n          mapContainerClassName=\"map-container\"\n          options={options}\n          onLoad={onLoad}\n        >\n          {userLocation && (\n            <>\n              <Marker position={userLocation} icon={icon} />\n\n              {userLocations.map((userLocation) => (\n                <Marker key={userLocation.lat} position={userLocation} />\n              ))}\n            </>\n          )}\n        </GoogleMap>\n      </div>\n    </div>\n  );\n}\n\nconst defaultOptions = {\n  strokeOpacity: 0.5,\n  strokeWeight: 2,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  visible: true,\n};\nconst closeOptions = {\n  ...defaultOptions,\n  zIndex: 3,\n  fillOpacity: 0.05,\n  strokeColor: \"#8BC34A\",\n  fillColor: \"#8BC34A\",\n};\n\nconst generateLocations = (position) => {\n  const userLocations = [];\n  for (let i = 0; i < 100; i++) {\n    const direction = Math.random() < 0.5 ? -10 : 10;\n    userLocations.push({\n      lat: position.lat + Math.random() / direction,\n      lng: position.lng + Math.random() / direction,\n    });\n  }\n  return userLocations;\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}